第一部分：常见头文件

1、#include <linux/fs.h>
	struct file_operations
	loff_t (*llseek) (struct file *, loff_t, int); 
	ssize_t (*read) (struct file *, char __user *, size_t, loff_t *); 
	ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *); 
	unsigned int (*poll) (struct file *, struct poll_table_struct *); 
	int (*ioctl) (struct inode *, struct file *, unsigned int, unsigned long); 
	int (*open) (struct inode *, struct file *); 
	int (*release) (struct inode *, struct file *); 
	int (*fsync) (struct file *, struct dentry *, int datasync); 
	int (*fasync) (int, struct file *, int); 

2、#include <linux/module.h>
	MODULE_LICENSE("GPL");

3、#include <linux/kernel.h>
	printk函数

4、#include<linux/init.h>
	module_init(forth_init);
	module_exit(forth_exit);

5、#include <linux/types.h>
	对一些特殊类型的定义，例如dev_t, off_t, pid_t.其实这些类型大部分都是unsigned int型通过一连串的typedef变过来的，只是为了方便阅读。

6、#include <linux/uaccess.h>
	copy_to_user（）
	copy_from_user（）
	
第二部分：模块相关头文件

1、中断相关：
	<linux/interrupt.h>
		request_irq、free_irq
	<linux/irq.h>
	<asm/signal.h>
2、并发与竞态相关：
	信号量：
	<asm/semaphore.h>
		定义了信号量的操作函数
	自旋锁：
	<linux/spinlock.h>
		定义了自旋锁相关的操作api

	原子操作atomic：
	<asm/atomic.h>

3、进程处理相关（字符设备高级操作）：
	<linux/ioctrl.h>
		ioctrl操作相关api
	<linux/wait.h>
		wait_event、wait_up  等休眠相关函数
	<linux/sched.h>
		set_current_state、schedule等切换函数
	<linux/poll.h>
		poll机制相关函数
	<asm/signal.h>
		信号处理相关函数